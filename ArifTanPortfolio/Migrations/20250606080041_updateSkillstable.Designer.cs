// <auto-generated />
using System;
using ArifTanPortfolio.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArifTanPortfolio.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250606080041_updateSkillstable")]
    partial class updateSkillstable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("ArifTanPortfolio.Models.BlogPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FeaturedImage")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReadTimeMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PublishedDate");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("BlogPosts");
                });

            modelBuilder.Entity("ArifTanPortfolio.Models.ContactMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRead")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DateSent");

                    b.ToTable("ContactMessages");
                });

            modelBuilder.Entity("ArifTanPortfolio.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Challenges")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FeaturedImage")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("GitHubUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageGallery")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LessonsLearned")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LiveUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Solutions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Technologies")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("SortOrder");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Enterprise Software",
                            Challenges = "",
                            Description = "Comprehensive warehouse management system with real-time tracking and analytics",
                            EndDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageGallery = "",
                            IsFeatured = true,
                            LessonsLearned = "",
                            LongDescription = "A full-featured WMS built with ASP.NET Core, handling inventory management, order processing, and real-time analytics for logistics operations.",
                            Name = "Advanced Logistics Platform",
                            Solutions = "",
                            SortOrder = 1,
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Technologies = "ASP.NET Core, Entity Framework, SQL Server, SignalR, Azure"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Machine Learning",
                            Challenges = "",
                            Description = "OCR and document automation system using machine learning",
                            EndDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageGallery = "",
                            IsFeatured = true,
                            LessonsLearned = "",
                            LongDescription = "Automated document processing system that uses OCR and ML to extract and process information from various document types.",
                            Name = "AI Document Processing",
                            Solutions = "",
                            SortOrder = 2,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Technologies = "Python, TensorFlow, Azure Cognitive Services, ASP.NET Core API"
                        });
                });

            modelBuilder.Entity("ArifTanPortfolio.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Proficiency")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("SortOrder");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Programming Languages",
                            Icon = "devicon-csharp-plain",
                            IsVisible = true,
                            Name = "C#",
                            Proficiency = 9,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = "Programming Languages",
                            Icon = "devicon-javascript-plain",
                            IsVisible = true,
                            Name = "JavaScript",
                            Proficiency = 8,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            Category = "Programming Languages",
                            Icon = "devicon-python-plain",
                            IsVisible = true,
                            Name = "Python",
                            Proficiency = 8,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 4,
                            Category = "Web Frameworks",
                            Icon = "devicon-dot-net-plain",
                            IsVisible = true,
                            Name = "ASP.NET Core",
                            Proficiency = 9,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 5,
                            Category = "Web Frameworks",
                            Icon = "devicon-dot-net-plain",
                            IsVisible = false,
                            Name = "ASP.NET MVC",
                            Proficiency = 9,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 6,
                            Category = "Web Frameworks",
                            Icon = "devicon-dot-net-plain",
                            IsVisible = false,
                            Name = "Razor Pages",
                            Proficiency = 9,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 7,
                            Category = "Web Frameworks",
                            Icon = "devicon-nodejs-plain",
                            IsVisible = true,
                            Name = "Node.js",
                            Proficiency = 8,
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 8,
                            Category = "Web Frameworks",
                            Description = "Maintenance experience",
                            Icon = "devicon-react-original",
                            IsVisible = false,
                            Name = "React",
                            Proficiency = 6,
                            SortOrder = 5
                        },
                        new
                        {
                            Id = 9,
                            Category = "Web Frameworks",
                            Icon = "devicon-dot-net-plain",
                            IsVisible = false,
                            Name = "SignalR",
                            Proficiency = 8,
                            SortOrder = 6
                        },
                        new
                        {
                            Id = 10,
                            Category = "Frontend",
                            Icon = "devicon-jquery-plain",
                            IsVisible = false,
                            Name = "jQuery",
                            Proficiency = 8,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 11,
                            Category = "Frontend",
                            Icon = "devicon-javascript-plain",
                            IsVisible = false,
                            Name = "AJAX",
                            Proficiency = 8,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 12,
                            Category = "Frontend",
                            Icon = "devicon-bootstrap-plain",
                            IsVisible = false,
                            Name = "Bootstrap",
                            Proficiency = 8,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 13,
                            Category = "Frontend",
                            Icon = "devicon-html5-plain",
                            IsVisible = false,
                            Name = "HTML/CSS",
                            Proficiency = 8,
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 14,
                            Category = "Databases",
                            Icon = "devicon-microsoftsqlserver-plain",
                            IsVisible = true,
                            Name = "SQL Server",
                            Proficiency = 9,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 15,
                            Category = "Databases",
                            Icon = "devicon-postgresql-plain",
                            IsVisible = true,
                            Name = "PostgreSQL",
                            Proficiency = 9,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 16,
                            Category = "Databases",
                            Icon = "devicon-dot-net-plain",
                            IsVisible = false,
                            Name = "Entity Framework Core",
                            Proficiency = 9,
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 17,
                            Category = "Databases",
                            Icon = "devicon-sqlite-plain",
                            IsVisible = false,
                            Name = "SQLite",
                            Proficiency = 9,
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 18,
                            Category = "Cloud Platforms",
                            Icon = "devicon-azure-plain",
                            IsVisible = false,
                            Name = "Azure",
                            Proficiency = 9,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 19,
                            Category = "Cloud Platforms",
                            Icon = "fas fa-bolt",
                            IsVisible = false,
                            Name = "Power Automate",
                            Proficiency = 9,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 20,
                            Category = "DevOps",
                            Icon = "devicon-docker-plain",
                            IsVisible = false,
                            Name = "Docker",
                            Proficiency = 7,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 21,
                            Category = "DevOps",
                            Icon = "devicon-git-plain",
                            IsVisible = true,
                            Name = "Git",
                            Proficiency = 9,
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 22,
                            Category = "DevOps",
                            Icon = "devicon-azure-plain",
                            IsVisible = false,
                            Name = "Azure DevOps",
                            Proficiency = 7,
                            SortOrder = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
